// <auto-generated />
using DoutorAgendaServices.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DoutorAgendaServices.Migrations
{
    [DbContext(typeof(DoutorAgendaContext))]
    [Migration("20180612000837_DoutorAgedaMigration")]
    partial class DoutorAgedaMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoutorAgendaServices.Models.AgendamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHoraConsulta");

                    b.Property<int?>("MedicoId");

                    b.Property<int?>("PacienteId");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("DoutorAgendaServices.Models.MedicoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CRM");

                    b.Property<string>("Especialidade");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("DoutorAgendaServices.Models.PacienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("DoutorAgendaServices.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<DateTime?>("UltimoLogin");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DoutorAgendaServices.Models.AgendamentoModel", b =>
                {
                    b.HasOne("DoutorAgendaServices.Models.MedicoModel", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.HasOne("DoutorAgendaServices.Models.PacienteModel", "Paciente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PacienteId");
                });
#pragma warning restore 612, 618
        }
    }
}
